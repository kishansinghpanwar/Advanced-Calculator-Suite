name: 🧪 Automated UI Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual triggering
  schedule:
    - cron: '0 2 * * *'  # Run daily at 2 AM

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v3
      
    - name: ☕ Setup JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 🏗️ Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: 🧪 Run Unit Tests
      run: ./gradlew testDebugUnitTest
      
    - name: 📊 Upload Unit Test Results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: unit-test-results
        path: app/build/reports/tests/

  ui-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
        
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v3
      
    - name: ☕ Setup JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 🤖 Setup Android SDK
      uses: android-actions/setup-android@v2
      
    - name: 🏗️ Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: 📱 Create AVD and run UI Tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        target: google_apis
        arch: x86_64
        profile: Nexus 6
        script: ./gradlew connectedDebugAndroidTest
        
    - name: 📊 Upload UI Test Results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: ui-test-results
        path: app/build/reports/androidTests/

  coverage:
    runs-on: ubuntu-latest
    needs: unit-tests
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v3
      
    - name: ☕ Setup JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: 🏗️ Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: 📊 Generate Coverage Report
      run: ./gradlew jacocoTestReport
      
    - name: 📈 Upload Coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: app/build/reports/jacoco/testDebugUnitTest/jacocoTestReport.xml
        
    - name: 📊 Upload Coverage Report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: app/build/reports/jacoco/

  notify:
    runs-on: ubuntu-latest
    needs: [unit-tests, ui-tests, coverage]
    if: always()
    
    steps:
    - name: 📢 Notify Test Results
      run: |
        if [ "${{ needs.unit-tests.result }}" == "success" ] && [ "${{ needs.ui-tests.result }}" == "success" ]; then
          echo "✅ All tests passed! 🎉"
        else
          echo "❌ Some tests failed! 🔍"
          exit 1
        fi
